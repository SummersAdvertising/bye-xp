
<script type="text/javascript">

Backbone.emulateHTTP = true;
Backbone.emulateJSON = true;

Question = Backbone.Model.extend({
	initialize: function() {		
		this.bind("change:text", function() {
			console.log(question.get('text'));
		});
		
		this.bind("error", function( model, error ) {
			console.log('oops');
		});
		
	},
	
	validate: function( attributes ) {
	console.log('in validation');
		if ( attributes.text == 'Yuzhe' ) {
			return 'Yuzhe 0.0';
		}
	}
	
});

Data = new Backbone.Model({
	data: [
		{ text: 'first', href: "www.google.com.tw" },
		{ text: 'second', href: "www.yahoo.com.tw" },
		{ text: 'third', href: "www.facebook.com" },
	]
});

var View = Backbone.View.extend({
	initialize: function() {
		console.log(' view initialized ');
	},
	el: '#container',
	events: {
		"click": "render"
	},
	template: $("#list-template").children(),
	render: function() {
		var data = this.model.get( 'data' );
		
		for( var i=0, l=data.length; i <l; i ++ ) {
			var a = this.template.clone().find('a');
			var li = a.attr('href', data[i].href);
			li = li.text( data[i].text ).end();
			this.$el.find('ul').append(li);
		}
	}
});

var Router = Backbone.Router.extend({
	routes: {
		":route1": "foo1",
		":route1/:path1": "foo2",
		"*action": "foo_action"
	},
	foo1: function(p1) {
		console.log('foo1： ' + p1);
	},
	foo2: function(p1, p2) {
		console.log('foo2：' + p1 + ', ' + p2);
	},
	foo_action: function(a) {
	console.log('this is in foo action');
		if ( a !== '' ) {
			console.log('foo_action：' + a);
		}
	}
});

var Person = Backbone.Model.extend({
	initialize: function() {
		console.log("Person initialized");
		this.on('all', function(e) {
			console.log(this.get('name') + " event: " + e);
		});
	},
	defaults: {
		 name: "undefined",
		 age: "undefined"
	},
	urlRoot: "/records/",
	url: function() {
		var base = this.urlRoot || ( this.collection && this.collection.url ) || "/" ;
		if ( this.isNew() ) return base;
		return base + "?id=" + encodeURIComponent(this.id); 
	}
});


var People = Backbone.Collection.extend({
	initialize: function() {
		this.on('all', function(e) {
			console.log("People event: " + e);
		});
		
	},
	model: Person,
	url: "/records"
});
 

$(document).ready(function() {

var person = new Person({id:1});
person.fetch();

person = new Person({id: 1, name: "Joe Zim", age: 23});
person.save();

person = new Person({id:1, name: "Joe Zim", age: 23});
person.save();
person.destroy();


var people = new People();

people.fetch();
people.create({name: "Joe Zim", age: 23});
prople.create({ id: 6, name: "Chuck Norris", age: 72 });

});

//var question = new Question( { text: "Yuzhe", answers: [1,2,3,4] } );

</script>

<div id="container">
	<button>我抓</button>
	<ul id="list"></ul>
</div>

<div id="list-template">
	<li><a href=""></a></li>
</div>

<a href="#route1">route1</a>
<a href="#route1/path1">route1/path1</a>
<a href="#route1/path1/123">route1/path1/123</a>
<a href="#route1/path1/喔耶">route1/path1/喔耶</a>

<h1>New record</h1>

<%= render 'form' %>

<%= link_to 'Back', records_path %>
